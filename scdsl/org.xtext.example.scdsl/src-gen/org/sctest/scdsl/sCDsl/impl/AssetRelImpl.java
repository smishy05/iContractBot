/**
 * generated by Xtext 2.22.0
 */
package org.sctest.scdsl.sCDsl.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.sctest.scdsl.sCDsl.AssetRel;
import org.sctest.scdsl.sCDsl.SCDslPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Asset Rel</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.sctest.scdsl.sCDsl.impl.AssetRelImpl#isCreate <em>Create</em>}</li>
 *   <li>{@link org.sctest.scdsl.sCDsl.impl.AssetRelImpl#isRead <em>Read</em>}</li>
 *   <li>{@link org.sctest.scdsl.sCDsl.impl.AssetRelImpl#isUpdate <em>Update</em>}</li>
 *   <li>{@link org.sctest.scdsl.sCDsl.impl.AssetRelImpl#isDelete <em>Delete</em>}</li>
 *   <li>{@link org.sctest.scdsl.sCDsl.impl.AssetRelImpl#isAll <em>All</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AssetRelImpl extends RelationshipImpl implements AssetRel
{
  /**
   * The default value of the '{@link #isCreate() <em>Create</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isCreate()
   * @generated
   * @ordered
   */
  protected static final boolean CREATE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isCreate() <em>Create</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isCreate()
   * @generated
   * @ordered
   */
  protected boolean create = CREATE_EDEFAULT;

  /**
   * The default value of the '{@link #isRead() <em>Read</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isRead()
   * @generated
   * @ordered
   */
  protected static final boolean READ_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isRead() <em>Read</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isRead()
   * @generated
   * @ordered
   */
  protected boolean read = READ_EDEFAULT;

  /**
   * The default value of the '{@link #isUpdate() <em>Update</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isUpdate()
   * @generated
   * @ordered
   */
  protected static final boolean UPDATE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isUpdate() <em>Update</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isUpdate()
   * @generated
   * @ordered
   */
  protected boolean update = UPDATE_EDEFAULT;

  /**
   * The default value of the '{@link #isDelete() <em>Delete</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDelete()
   * @generated
   * @ordered
   */
  protected static final boolean DELETE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isDelete() <em>Delete</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDelete()
   * @generated
   * @ordered
   */
  protected boolean delete = DELETE_EDEFAULT;

  /**
   * The default value of the '{@link #isAll() <em>All</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isAll()
   * @generated
   * @ordered
   */
  protected static final boolean ALL_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isAll() <em>All</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isAll()
   * @generated
   * @ordered
   */
  protected boolean all = ALL_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AssetRelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SCDslPackage.Literals.ASSET_REL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isCreate()
  {
    return create;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCreate(boolean newCreate)
  {
    boolean oldCreate = create;
    create = newCreate;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SCDslPackage.ASSET_REL__CREATE, oldCreate, create));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isRead()
  {
    return read;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRead(boolean newRead)
  {
    boolean oldRead = read;
    read = newRead;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SCDslPackage.ASSET_REL__READ, oldRead, read));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isUpdate()
  {
    return update;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setUpdate(boolean newUpdate)
  {
    boolean oldUpdate = update;
    update = newUpdate;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SCDslPackage.ASSET_REL__UPDATE, oldUpdate, update));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isDelete()
  {
    return delete;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDelete(boolean newDelete)
  {
    boolean oldDelete = delete;
    delete = newDelete;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SCDslPackage.ASSET_REL__DELETE, oldDelete, delete));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isAll()
  {
    return all;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAll(boolean newAll)
  {
    boolean oldAll = all;
    all = newAll;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SCDslPackage.ASSET_REL__ALL, oldAll, all));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SCDslPackage.ASSET_REL__CREATE:
        return isCreate();
      case SCDslPackage.ASSET_REL__READ:
        return isRead();
      case SCDslPackage.ASSET_REL__UPDATE:
        return isUpdate();
      case SCDslPackage.ASSET_REL__DELETE:
        return isDelete();
      case SCDslPackage.ASSET_REL__ALL:
        return isAll();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SCDslPackage.ASSET_REL__CREATE:
        setCreate((Boolean)newValue);
        return;
      case SCDslPackage.ASSET_REL__READ:
        setRead((Boolean)newValue);
        return;
      case SCDslPackage.ASSET_REL__UPDATE:
        setUpdate((Boolean)newValue);
        return;
      case SCDslPackage.ASSET_REL__DELETE:
        setDelete((Boolean)newValue);
        return;
      case SCDslPackage.ASSET_REL__ALL:
        setAll((Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SCDslPackage.ASSET_REL__CREATE:
        setCreate(CREATE_EDEFAULT);
        return;
      case SCDslPackage.ASSET_REL__READ:
        setRead(READ_EDEFAULT);
        return;
      case SCDslPackage.ASSET_REL__UPDATE:
        setUpdate(UPDATE_EDEFAULT);
        return;
      case SCDslPackage.ASSET_REL__DELETE:
        setDelete(DELETE_EDEFAULT);
        return;
      case SCDslPackage.ASSET_REL__ALL:
        setAll(ALL_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SCDslPackage.ASSET_REL__CREATE:
        return create != CREATE_EDEFAULT;
      case SCDslPackage.ASSET_REL__READ:
        return read != READ_EDEFAULT;
      case SCDslPackage.ASSET_REL__UPDATE:
        return update != UPDATE_EDEFAULT;
      case SCDslPackage.ASSET_REL__DELETE:
        return delete != DELETE_EDEFAULT;
      case SCDslPackage.ASSET_REL__ALL:
        return all != ALL_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (create: ");
    result.append(create);
    result.append(", read: ");
    result.append(read);
    result.append(", update: ");
    result.append(update);
    result.append(", delete: ");
    result.append(delete);
    result.append(", all: ");
    result.append(all);
    result.append(')');
    return result.toString();
  }

} //AssetRelImpl
